name: 'Build Go binaries for all platforms'
description: 'Build Go binaries for all OS and architecture combinations'

# these inputs are always provided by flowzone, so they must always be defined on the composite action
inputs:
  json:
    description: "JSON stringified object containing all the inputs from the calling workflow"
    required: true
  secrets:
    description: "JSON stringified object containing all the secrets from the calling workflow"
    required: true

runs:
  using: "composite"
  steps:
    - name: Setup Go
      uses: actions/setup-go@v5.5.0
      with:
        go-version: '1.25'

    - name: Build binary for ${{ env.matrix_value }}
      shell: bash
      run: |
        cd lib
        
        # Create output directory
        mkdir -p ../dist/bin
        
        # Get the current platform from matrix
        platform=${{ env.matrix_value }}
        echo "Building for $platform..."
        
        GOOS=$(echo $platform | cut -d'-' -f1)
        GOARCH=$(echo $platform | cut -d'-' -f2)
        
        # Add .exe extension for Windows
        if [ "$GOOS" = "windows" ]; then
          CGO_ENABLED=0 go build -ldflags="-s -w" -o ../dist/bin/balena-compose-go-$platform.exe .
        else
          CGO_ENABLED=0 go build -ldflags="-s -w" -o ../dist/bin/balena-compose-go-$platform .
        fi

        echo "Binary built successfully for $platform"
        ls -la ../dist/bin/

    - name: Upload binary as artifact
      uses: actions/upload-artifact@v4.6.2
      with:
        name: gh-release-${{ env.matrix_value }}
        path: dist/bin/balena-compose-go-*
        retention-days: 7